{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      list: null,\n      // 섹션1 사용할 데이터 담을거\n      data: null,\n      // 라우터 주소 /:id 받아온거\n      routeParmasId: this.$route.params.id,\n      a: null\n    };\n  },\n  components: {},\n  props: ['DataWineList'],\n  methods: {\n    // 공백제거 메소드\n    textTrim(x) {\n      // 정규식을 이용한 공백제거 \n      let text = x.replace(/(\\s*)/g, \"\");\n      // / 가 있는지 체크 \n      if (text.split('/').length - 1 >= 1) {\n        // 있으면 / 를 다 지움\n        text = text.replaceAll('/');\n        return text;\n      } else {\n        // 없으면 공백만 제거해서 리턴\n        return text;\n      }\n    }\n  },\n  created() {\n    // 3중포문.\n\n    // 빈 배열 만들어줌\n    let a = [];\n    let b = [];\n    // 배열 한번 벗김\n    this.DataWineList.forEach(ele => {\n      a.push(...ele.data);\n    });\n    // 아마 객체인가 그래서 배열화 시킴\n    for (let x of a) {\n      b.push(...x.LIST);\n    }\n    this.list = b;\n\n    // 누른놈이랑 같은이름 있으면 그놈 데이터 가져옴\n    b.forEach(ele => {\n      // 비교\n      if (this.textTrim(ele.WINE) == this.routeParmasId) {\n        // 객체데이터여서 빈 배열 만들어서 data()에 있는 애한테 담기위해 만듬\n        let arr = [];\n        // 이름 : 값 으로 배열화 \n        for (let x in ele) {\n          let data = {\n            a: x,\n            b: ele[x]\n          };\n          arr.push(data);\n        }\n        // 템플릿에서 사용할 데이터에 담음\n        this.data = arr;\n      }\n    });\n  }\n};","map":{"version":3,"names":["data","list","routeParmasId","$route","params","id","a","components","props","methods","textTrim","x","text","replace","split","length","replaceAll","created","b","DataWineList","forEach","ele","push","LIST","WINE","arr"],"sources":["C:\\Users\\fkrms\\Desktop\\github\\mink\\src\\components\\com-Company.vue"],"sourcesContent":["<template>\r\n  <main id=\"main\">\r\n    <div class=\"headerBG\"></div>\r\n    <section id=\"wines\" class=\"wines\">\r\n      <div class=\"wines-left\">\r\n        <div class=\"wines-wrap\">\r\n          <div class=\"wines-list\">\r\n            <ul class=\"item-list\">\r\n              <!-- 태그가 달라질텐데 반복문 쓰면 안될듯... -->\r\n              <li v-for=\"(x,i) in data\" :key=\"i\">\r\n                {{ x.a}} : {{ x.b }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"info\">\r\n          <span class=\"btn-line infoBtn\">PRODUCER INFO</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"wines-right\">\r\n        <div class=\"wines-imgBox\">\r\n          <img src=\"\" alt=\"wines\">\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section class=\"company\" id=\"company\">\r\n      <div class=\"company-left\">\r\n        <div class=\"company-text\">\r\n          <h2>{{ data[2].b }}</h2>\r\n          <h4>{{ data[3].b }}</h4>\r\n          <p class=\"story-1\">\r\n            {{ data[7].b }}\r\n          </p>\r\n        </div>\r\n        <span class=\"btn-line readBtn\">READ MORE</span>\r\n      </div>\r\n      <div class=\"company-right\">\r\n        <div class=\"company-imgBox\">\r\n          <img src=\"\" alt=\"company\">\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <div class=\"btn\">\r\n      <a class=\"btn-line\" href=\"#\">PREV</a>\r\n      <span class=\"btn-line topBtn\">TOP</span>\r\n      <a class=\"btn-line\" href=\"#\">NEXT</a>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data(){\r\n    return{\r\n      list : null,\r\n      // 섹션1 사용할 데이터 담을거\r\n      data : null,\r\n      // 라우터 주소 /:id 받아온거\r\n      routeParmasId : this.$route.params.id,\r\n      a : null\r\n    } \r\n  },\r\n  components:{},\r\n  props:['DataWineList'],\r\n  methods : {\r\n    // 공백제거 메소드\r\n    textTrim(x){\r\n      // 정규식을 이용한 공백제거 \r\n      let text = x.replace(/(\\s*)/g, \"\")\r\n      // / 가 있는지 체크 \r\n      if(text.split('/').length - 1 >= 1){\r\n        // 있으면 / 를 다 지움\r\n        text = text.replaceAll('/')\r\n        return text;\r\n      } else {\r\n        // 없으면 공백만 제거해서 리턴\r\n        return text;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 3중포문.\r\n\r\n    // 빈 배열 만들어줌\r\n    let a = [];\r\n    let b = [];\r\n    // 배열 한번 벗김\r\n    this.DataWineList.forEach((ele)=>{\r\n      a.push(...ele.data)\r\n    })\r\n    // 아마 객체인가 그래서 배열화 시킴\r\n    for(let x of a){\r\n      b.push(...x.LIST)\r\n    }\r\n    this.list = b\r\n\r\n\r\n    // 누른놈이랑 같은이름 있으면 그놈 데이터 가져옴\r\n    b.forEach((ele)=>{\r\n      // 비교\r\n      if(this.textTrim(ele.WINE) == this.routeParmasId){\r\n        // 객체데이터여서 빈 배열 만들어서 data()에 있는 애한테 담기위해 만듬\r\n        let arr = []\r\n        // 이름 : 값 으로 배열화 \r\n        for(let x in ele){\r\n          let data = { a : x, b : ele[x]}\r\n          arr.push(data)\r\n        }\r\n        // 템플릿에서 사용할 데이터에 담음\r\n        this.data = arr\r\n      }\r\n    })\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#main{\r\n  position: relative;\r\n}\r\n.wines{\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n}\r\n\r\n.wines-left,\r\n.wines-right,\r\n.company-left,\r\n.company-right{\r\n  width: 50%;\r\n}\r\n\r\n.wines-left{\r\n  position: relative;\r\n  margin-top: 59px;\r\n}\r\n\r\n.wines-wrap{\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%);\r\n}\r\n\r\n.wines-list{\r\n  overflow-y: auto;\r\n  max-height: 360px;\r\n}\r\n\r\n.wines-wrap::before{\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0%;\r\n  background: linear-gradient(rgba(255, 255, 255, 0),var(--main));;\r\n  width: 100%;\r\n  height: 20%;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n}\r\n\r\n.item-list{\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n.item{\r\n  padding-bottom: 10px;\r\n  transition: all .5s;\r\n  cursor: pointer;\r\n}\r\n\r\n.item.colorB{\r\n  color: var(--block);\r\n}\r\n\r\n.item.colorGray{\r\n  color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.item:hover span{\r\n  opacity: 1;\r\n  transform: translateY(0%);\r\n}\r\n\r\n.item h3,\r\n.item h4{\r\n  font-size: var(--font-size-M);\r\n  font-family: 'Nanum Myeongjo', serif;\r\n  margin: 10px;\r\n}\r\n\r\n.item h4,\r\n.company-text h4{\r\n  font-style: italic;\r\n}\r\n\r\n.item span{\r\n  font-size: var(--font-size-S);\r\n  transform: translateY(50%);\r\n  display: inline-block;\r\n  opacity: 0;\r\n  transition: all .5s;\r\n}\r\n\r\n.info{\r\n  position: absolute;\r\n  bottom: 10vh;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.info a{\r\n  font-size: var(--font-size-M);\r\n}\r\n\r\n.wines-right{\r\n  background-color: var(--gray);\r\n  padding-top: 59px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.wines-imgBox{\r\n  width: 55%;\r\n  height: 80%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: all .4s;\r\n}\r\n\r\n.company-left{\r\n  background-color: var(--beige);\r\n}\r\n\r\n.company{\r\n  display: flex;\r\n}\r\n\r\n.btn{\r\n  position: absolute;\r\n  bottom: 0;\r\n  box-sizing: border-box;\r\n  padding: 0 20px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  z-index: 2;\r\n}\r\n\r\n.btn a,\r\n.btn span{\r\n  font-size: var(--font-size-M);\r\n}\r\n\r\n.company-left{\r\n  box-sizing: border-box;\r\n  padding: 65px 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.company-text .story-2,\r\n.company-text .story-3{\r\n  transition: all 1s;\r\n  height: 0;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  overflow: hidden;\r\n}\r\n\r\n.story-2.active,\r\n.story-3.active{\r\n  overflow: auto;\r\n  visibility: visible;\r\n  opacity: 1;\r\n}\r\n\r\n.company-text h2,\r\n.company-text h4,\r\n.company-text p{\r\n  text-align: center;\r\n  font-size: var(--font-size-M);\r\n  font-family: 'Nanum Myeongjo', serif;\r\n  line-height: 1.3;\r\n}\r\n\r\n.company-text p{\r\n  margin-top: 10px;\r\n}\r\n\r\n.readBtn{\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.company-right{\r\n  height: 100vh;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: var(--main);\r\n  z-index: 2;\r\n}\r\n\r\n.company-imgBox{\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.company-imgBox>img{\r\n  object-fit: contain;\r\n  width: 55%;\r\n}\r\n\r\n/* 미디어쿼리 */\r\n@media screen and (max-width:990px){\r\n\r\n  .wines-left{\r\n    width: 100%;\r\n  }\r\n\r\n  .wines-right{\r\n    display: none;\r\n  }\r\n\r\n  .company {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n\r\n  .company-left,\r\n  .company-right{\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--beige);\r\n  }\r\n\r\n  .company-right{\r\n    position: static;\r\n    padding-top: 65px;\r\n    z-index: 0;\r\n  }\r\n}\r\n\r\n/* 미디어쿼리 */\r\n@media screen and (max-width:780px){\r\n\r\n}\r\n</style>"],"mappings":";AAmDA,eAAe;EACbA,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,IAAG,EAAI,IAAI;MACX;MACAD,IAAG,EAAI,IAAI;MACX;MACAE,aAAY,EAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrCC,CAAA,EAAI;IACN;EACF,CAAC;EACDC,UAAU,EAAC,CAAC,CAAC;EACbC,KAAK,EAAC,CAAC,cAAc,CAAC;EACtBC,OAAM,EAAI;IACR;IACAC,QAAQA,CAACC,CAAC,EAAC;MACT;MACA,IAAIC,IAAG,GAAID,CAAC,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE;MACjC;MACA,IAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAK,GAAI,KAAK,CAAC,EAAC;QACjC;QACAH,IAAG,GAAIA,IAAI,CAACI,UAAU,CAAC,GAAG;QAC1B,OAAOJ,IAAI;MACb,OAAO;QACL;QACA,OAAOA,IAAI;MACb;IACF;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR;;IAEA;IACA,IAAIX,CAAA,GAAI,EAAE;IACV,IAAIY,CAAA,GAAI,EAAE;IACV;IACA,IAAI,CAACC,YAAY,CAACC,OAAO,CAAEC,GAAG,IAAG;MAC/Bf,CAAC,CAACgB,IAAI,CAAC,GAAGD,GAAG,CAACrB,IAAI;IACpB,CAAC;IACD;IACA,KAAI,IAAIW,CAAA,IAAKL,CAAC,EAAC;MACbY,CAAC,CAACI,IAAI,CAAC,GAAGX,CAAC,CAACY,IAAI;IAClB;IACA,IAAI,CAACtB,IAAG,GAAIiB,CAAA;;IAGZ;IACAA,CAAC,CAACE,OAAO,CAAEC,GAAG,IAAG;MACf;MACA,IAAG,IAAI,CAACX,QAAQ,CAACW,GAAG,CAACG,IAAI,KAAK,IAAI,CAACtB,aAAa,EAAC;QAC/C;QACA,IAAIuB,GAAE,GAAI,EAAC;QACX;QACA,KAAI,IAAId,CAAA,IAAKU,GAAG,EAAC;UACf,IAAIrB,IAAG,GAAI;YAAEM,CAAA,EAAIK,CAAC;YAAEO,CAAA,EAAIG,GAAG,CAACV,CAAC;UAAC;UAC9Bc,GAAG,CAACH,IAAI,CAACtB,IAAI;QACf;QACA;QACA,IAAI,CAACA,IAAG,GAAIyB,GAAE;MAChB;IACF,CAAC;EAEH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}